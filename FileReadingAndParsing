//  Created by Kieran Halliday on 2018-07-16.
//  Copyright Â© 2018 Kieran Halliday. All rights reserved.
//

#include <iostream>
#include <fstream>

using namespace std;

//This level is about unscrambling words.
//
//Find the original (unscrambled) words, which were randomly taken from a wordlist.<--
//Send a comma separated list of the original words, in the same order as in the list below.
//
//
//You have 30 seconds time to send the solution.

int main(int argc, const char * argv[]) {
	fstream input;
	string line, fileName = "wordlist2.txt";
	
	input.open(fileName);
	
	// Count starts at one because first argument is program name
	for(int count = 1;count<argc;count++){
		string name = argv[count];
		while(getline(input, line)){
			bool isString = true;
			// remove \r from lines of wordlist. They appear after calling getline for this file
			line = line.substr(0,line.length()-1);
			string nameHolder = name,lineHolder = line;
			
			for(int i=0;i<lineHolder.length() && i<nameHolder.length();i++){
				if(nameHolder.find(lineHolder[i]) == string::npos)
					isString = false;
				else{
					nameHolder.replace(nameHolder.find(lineHolder[i]), 1, "");
					lineHolder.replace(lineHolder.find(lineHolder[i]),1, "");
					i=0;
				}
				
				if(lineHolder.find(nameHolder[i]) == string::npos)
					isString = false;
				else{
					lineHolder.replace(lineHolder.find(nameHolder[i]),1, "");
					nameHolder.replace(nameHolder.find(nameHolder[i]),1, "");
				}
				if(nameHolder == lineHolder){
					break;
				}
			}
			
			if(nameHolder.length()!=lineHolder.length())
				isString = false;
			
			if(isString)
				// Format answer string
				cout << line  << ",";
		}
		input.close();
		input.open(fileName);
	}
	input.close();
	return 0;
}
